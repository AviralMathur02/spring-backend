package com.example.echobackend.model;

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.io.Serializable;

@Entity
@Table(name = "relationships")
@Data
@NoArgsConstructor
@AllArgsConstructor
@IdClass(Relationship.RelationshipId.class) // IMPORTANT: Reference the nested class correctly
public class Relationship {

    @Id
    @Column(nullable = false)
    private Long followerUserId;

    @Id
    @Column(nullable = false)
    private Long followedUserId;

    // --- NESTED COMPOSITE PRIMARY KEY CLASS ---
    @Embeddable // Mark as embeddable for composite keys
    @Data
    @NoArgsConstructor
    @AllArgsConstructor
    public static class RelationshipId implements Serializable { // IMPORTANT: Add 'public static'
        private Long followerUserId;
        private Long followedUserId;

        // Important: hashCode and equals methods are automatically generated by Lombok's @Data,
        // but explicitly define them if not using Lombok or facing issues.
        // For composite keys, these methods are crucial for proper JPA behavior.
        // Lombok's @Data typically handles this correctly.
    }
}