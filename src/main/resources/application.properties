# Server Port
server.port=8080

# MySQL Database Connection (from api/connect.js)
spring.datasource.url=jdbc:mysql://localhost:3306/echo
spring.datasource.username=root
spring.datasource.password=1234

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# --- FIX START ---
# JWT Secret Key (MUST be a strong, unique, BASE64 ENCODED key)
# Run the Java utility (JwtKeyGenerator.java) I provided previously
# to generate a new key and paste it here.
# Example generated key (REPLACE THIS WITH YOUR OWN GENERATED KEY):
jwt.secret=kUqG6x/e4+Yt7w9V7B0y5Xg7m3P6Z7k4n5K4O2R1C8S0A9L0P1M2N3B4V5C6X7Z8Y9==

# JWT Expiration (e.g., 1 hour = 3600000 milliseconds)
jwt.expiration=3600000
# --- FIX END ---

# CORS Configuration (This is now handled in SecurityConfig.java)
# spring.web.cors.allowed-origins=http://localhost:3000
# spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
# spring.web.cors.allowed-headers=*
# spring.web.cors.allow-credentials=true
# spring.web.cors.max-age=3600

# File Upload Directory (This will become obsolete for S3 uploads, but keep for now if needed for other things)
# For local storage, if you still want to handle it. If completely moving to S3, this line can be removed eventually.
file.upload-dir=/path/to/your/upload/directory/

# AWS S3 Configuration




# Enable DEBUG level for Hibernate SQL and JPQL parsing
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.orm.query=DEBUG
logging.level.org.hibernate.hql.internal.ast.HqlParser=TRACE